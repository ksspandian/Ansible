---
- name: playbook to install / upgrade logrhythm
  hosts: servers
  gather_facts: true
  become: yes
  become_method: sudo

  tasks:

   - name: copy template
     template:
       src: /home/kpandian/ansible/files/scsm.ini.j2
       dest: /opt/logrhythm/scsm/config/scsm.ini
       owner: root
       group: root
       mode: '0664'

#  - name: ini file
#    ini_file:
#      path: /home/kpandian/Documents/scsm.ini
#      section: Mediator 1
#      option: ClientAddress
#      value: "{{ ansible_default_ipv4.address }}"
#    with_items:
#     - option: ClientAddress
#        value: "{{ ansible_default_ipv4.address }}"
#     - option: Host
#        value: 10.14.10.80

#  - name: ini file
#    ini_file:
#      path: /home/kpandian/Documents/scsm.ini
#      section: Mediator 2
#      option: "{{ item.option }}"
#      value: "{{ item.value }}"
#    with_items:
#      - option: ClientAddress
#        value: "{{ ansible_default_ipv4.address }}"
#      - option: Host
#        value: 10.14.10.18



#  - name: replace multiple lines
#    replace:
#      path: /home/kpandian/Documents/scsm.ini
#      after: '[Mediator 1]'
#      before: 'ClientPort=3333'
#      regexp: '^$'
#      replace: |-
#        [Mediator 1]
#        ClientAddress=127.0.0.1
#        Host=10.14.10.18
#        ServerPort=443
#        ClientPort=3333

#        [Mediator 2]
#        ClientAddress=127
#        Host=10.14.10.80
#        ServerPort=443
#        ClientPort=3333


#  - name: package facts
#    package_facts:
#      manager: rpm

#  - name: set facts
#    set_fact:
#      falcon_state: notinstalled
#    when: '"falcon-sensor" not in ansible_facts.packages'

#  - debug:
#      var: falcon_state

#  - name: set facts
#    set_fact:
#      scsm_ver: "{{ ansible_facts.packages['scsm'][0].version }}"
#    when: '"scsm" in ansible_facts.packages'

#  - debug:
#      var: falcon_ver

#  - name: final test
#    shell: uname -a; uptime
#    when:
#      - scsm_ver is undefined or
#        scsm_ver != "7.4.10.8003"

#  - name: display falcon-sensor
#    debug:
#      var: ansible_facts.packages['scsm']
      


#  - name: Check if crowdstrike is installed
#    yum:
#      list: falcon-sensor
#    register: falcon

#  - name: remove old version of crowdstrike
#    package:
#      name: falcon-sensor
#      state: absent
#    when: '"5.26" not in falcon.stdout'


#  - name: Crowdstrike 4.18 is installed
#    debug:
#      msg: 4.18 is installed
#    when:
#      - falcon.stdout != ""
#      - '"5.26" not in falcon.stdout'

#  - name: crowdstrike is not installed
#    debug:
#      msg: crowdstrike is not installed
#    when: '"4.18" not in falcon.stdout'

#  - name: crowdstrike 5.26 is installed
#    debug:
#      msg: 5.26 is installed
#    when:
#      - '"5.26" in falcon.stdout'
